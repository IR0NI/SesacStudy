#include <iostream>
#include <typeinfo>

/*
상속 : 클래스는 부모와 자식의 관례를 형성할 수 있다. 자식클래스는 부모클래스의 멤버를 생성하여
포함하여 생성되게 된다.

상속 구조에서 생성자와 소멸자의 호출순서
생성자 : 부모 -> 자식
소멸자 : 자식 -> 부모

private 상속을 받게 되면 클래스 외부에서는 부모의 멤버에 접근이 불가능하고

protected : 클래스 외부에서는 접근이 불가능하고 클래스 내부 혹은 자식클래스의 내부에서는 접근이 가능

RTTI(Run Time Type Information) : 실시간으로 타입정보를 얻을 수 있게 해주는 기능

다형성 : 상속관계에 있는 클래스 사이에 서로 형변환이 가능한 성질을 말한다.

업캐스팅 : 자식 -> 부모 형변환
다운캐스팅 : 부모 -> 자식 형변환

1. 공통적인 멤버를 부모에 두고 각 자식의 특징만 자식클래스의 멤버로 만들어서 클래스를 재사용할 수 있게 해준다.
2. 다형성을 이용하여 부모타입으로의 형변환이 가능하기 때문에 부모타입의 관리하는 하나의 목록으로 여러가지 자식클래스의
객체들을 관리할 수 있다.
*/
class CParent
{
public:
	CParent()
	{

	}
	~CParent()
	{

	}
};

class CChild :
	public CParent
{



};

int main()
{

	return 0;
}