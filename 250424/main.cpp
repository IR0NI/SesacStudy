
// 이 줄은 코드에 영향을 줄 수 없다.
// 앞에 #이 붙으면 전처리기이다.
// 전처리기는 컴파일 단계 전에 처리하는 구문이다.
// #include는 뒤에 있는 헤더파일을 여기에 포함시켜 해당 헤더파일의
// 코드를 여기에서 사용할 수 있도록 한다
#include <iostream>

// usnig namespace를 해주면 뒤에 있는 namespace를 여기에서
// 사용하겠다고 하여 std:: 를 빼주고 사용이 가능하다. (std:: 생략가능)
//using namespace std;

void main()
{
	// _s가 붙으면 최근에 개선된 명령어이다.
	// c++은 속도에치중되고 보안에 취약함
	// c++은 메모리에 접근할 수 있다.
	// _s붙어있는 명령어는 안전을 생각해서 만든명령어 좀만실수해도 프로그램이 아예 다운될수도 있는걸방지

	// '' : 문자 1개를 표현한다. 알파벳 혹은 숫자.
	// "" : 문자 여러개를 표현한다. (문자열)
	// 코드 줄의 작성이 끝날때 ; 을 붙여주어야 한다.
	// \n : 개행문자
	printf("출력 테스트\n");
	printf("두번째 출력\n");

	// :: 스코프 연산자이다. 범위를 지정할 때 사용한다.
	// std::cout 이렇게 표현하면 std namespace 안의 cout이다.
	// ctrl + b 누르면 오류목록 볼 수 있음
	// 오류 빨간줄을 맹신하지 말자 코드가 방대해지면 반영이 안될수있음
	// 오류 목록 체크해야됨
	std::cout << "세번째 출력\n";

	//cout << "네번째 출력";

	/*
	여러줄 주석.
	용량의 최소단위 : bit
	1bit는 0,1 둘중에 하나의 값을 저장할 수 있는 공간이다.
	1byte : 8bit
	1kybte : 1024byte
	1mbyte : 1024kbyte
	1gbyte : 1024mbyte
	1tbyte : 1024gbyte

	변수와 상수
	변수 : 값을 변경할 수 있는 숫자이다.
	상수 : 값을 변경할 수 없는 숫자이다.
	메모리에 공간을 만들고 변수나 상수의 값을 저장해둔다.

	크기 : byte단위
	문자 표현시 한글, 한자는 2바이트를 차지한다.
	문자는 값을 저장하고 값에 해당하는 문자를 ASCII코드에서 찾아서 표현한다.

	signed : +, - 부호가 있다.
	unsigned : 부호가 없다. (+만 있다.)
	기본은 signed 이다.

	표현범위를 벗어나면 동작되는 방식
	최대값 이상 : 최소값으로 전환
	최소값 이하 : 최대값으로 전환
	INT_MAX : int로 표현할 수 있는 최대값
	INT64

	타입	크기	종류		표현번위
	bool	1		참/거짓		false(0) - true(1)
	char	1		문자		-128 ~ 127
	short	2		정수		-32768 ~ 32767
	int		4		정수		-2147483648 ~ 2147483647
	__int64	8		정수		매우 큼
	float	4		실수		
	double	8		실수		넓은 범위의 소수점아래를 표현할 수 있음

	변수 선언 방법 : 변수타입 변수명;
	변수명은 알파벳, 숫자, _ 만 사용가능
	변수명의 시작은 알파벳, _ 만 가능

	*/
		
	// 변수는 선언하면 쓰레기값이 들어가 있다.
	// 그렇기 때문에 선언과 동시에 초기화를 해주고 사용하는것이 안전하다.
	bool TestBool = false;
	TestBool = true;

	int	Number = 100;

	// 변수 타입 왼쪽에 const를 붙이면 상수 선언이 된다.
	const int cNumber = 200;
	
	char Text = 'C';

	// -128 ~ 127 사이의 값을 unsigned를 붙여 0 ~ 255로 표현범위를 바꿔주었다.
	unsigned char Text1 = 203;

	// -32768 ~ 32767
	short Number1 = -32769;

	// cout에 변수를 넣으면 변수가 가지고 있는 값을 출력한다.
	std::cout << Number1 << "\n";

	// 소수점 뒤에 f를 붙이면 float타입 실수가 된다.
	// f가 없으면 double 타입 실수가 된다.
	float Number2 = 3.145678f;

	std::cout << Number2 << "\n";

	Number = 3.14f;
	std::cout << Number << "\n";
}